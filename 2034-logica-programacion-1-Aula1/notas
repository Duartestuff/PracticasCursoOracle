Desafíos

Muestra una alerta con el mensaje "¡Bienvenida y bienvenido a nuestro sitio web!".
Declara una variable llamada nombre y asígnale el valor "Luna".
Crea una variable llamada edady asígnale el valor 25.
Establece una variable numeroDeVentas y asígnale el valor 50.
Establece una variable saldoDisponible y asígnale el valor 1000.
Muestra una alerta con el texto "¡Error! Completa todos los campos".
Declara una variable llamada mensajeDeError y asígnale el valor "¡Error! Completa todos los campos". Ahora muestra una alerta con el valor de la variable mensajeDeError .
Utiliza un prompt para preguntar el nombre del usuario y almacénalo en la variable nombre .
Pide al usuario que ingrese su edad usando un prompt y almacénala en la variable edad.
Ahora, si la edad es mayor o igual a 18, muestra una alerta con el mensaje "¡Puedes obtener tu licencia de conducir!".


Preparamos el entorno de desarrollo instalando Visual Studio Code para crear programas utilizando el lenguaje JavaScript.
Comprendimos el concepto de variable para almacenar información, como números o palabras, para usarla más tarde en nuestro programa.
Utilizamos el alert para mostrar un mensaje proporcionando algunas instrucciones sobre el programa, y utilizamos el prompt para interactuar con la persona, permitiéndole ingresar un valor y almacenándolo en una variable.
Creamos un if, que es una instrucción en programación que permite que la computadora tome decisiones al ejecutar un bloque de código solo si una condición específica es verdadera.


En el siguiente código, tenemos una sugerencia para agregar el comando console.log para verificar si los valores se están asignando correctamente a las variables y si las condiciones se están evaluando como se espera. Echa un vistazo:

alert('Bienvenido al juego del número secreto');

// Agrega un console.log para verificar el valor de "intento" después de la entrada del usuario
let intento = prompt('Elige un número entre 1 y 10');
console.log('Valor de intento:', intento);

let numeroSecreto = 4;

// Agrega un console.log para verificar la comparación entre "intento" y "numeroSecreto"
console.log('Resultado de la comparación:', intento == numeroSecreto);

if (intento == numeroSecreto) {
    alert('Adivinaste');
} else {
    // Agrega un console.log para verificar el valor de "numeroSecreto" cuando el jugador se equivoca
    console.log('Valor del número secreto:', numeroSecreto);
    alert('El número secreto era ' + numeroSecreto);
}
COPIA EL CÓDIGO
Es importante recordar que cuando el proyecto esté disponible para todas las personas, en lo que llamamos en el contexto del software "entorno de producción", los comandos console.log deben eliminarse o desactivarse, ya que pueden causar problemas de rendimiento y seguridad.

Desafíos:

Pregunta al usuario qué día de la semana es. Si la respuesta es "Sábado" o "Domingo", muestra "¡Buen fin de semana!". De lo contrario, muestra "¡Buena semana!".
Verifica si un número ingresado por el usuario es positivo o negativo. Muestra una alerta informativa.
Crea un sistema de puntuación para un juego. Si la puntuación es mayor o igual a 100, muestra "¡Felicidades, has ganado!". En caso contrario, muestra "Intentalo nuevamente para ganar.".
Crea un mensaje que informe al usuario sobre el saldo de su cuenta, utilizando un template string para incluir el valor del saldo.
Pide al usuario que ingrese su nombre mediante un prompt. Luego, muestra una alerta de bienvenida usando ese nombre.
Si necesitas ayuda, las opciones de solución de las actividades estarán disponibles en la sección “Opinión de la persona instructora”.

En esta aula:

Utilizamos la consola para probar y depurar nuestro código, mostrando mensajes y valores durante la ejecución del programa.
Aprendimos a utilizar estructuras condicionales (if/else) para generar lógicas que permiten al programa tomar decisiones basadas en condiciones específicas.
Implementamos un bloque de código para mostrar un mensaje en caso de que el intento del usuario no coincida con el número secreto.
Usamos Template Strings para concatenar el número secreto con el valor almacenado en una variable y mostrar un mensaje personalizado.

Crea un contador que comience en 1 y vaya hasta 10 usando un bucle 'while'. Muestra cada número.
Crea un contador que comience en 10 y vaya hasta 0 usando un bucle 'while'. Muestra cada número.
Crea un programa de cuenta progresiva. Pide un número y cuenta desde 0 hasta ese número utilizando un bucle 'while' en la consola del navegador.

AND (&&)

El operador AND, representado por el símbolo "&&", se utiliza para combinar dos condiciones y evaluar si ambas son verdaderas. Si ambas condiciones son verdaderas, el resultado será... verdadero. De lo contrario, lógicamente será falso. Por ejemplo:

let edad = 25;
let tieneLicencia = true;

// si la edad es mayor de 18 y tiene una licencia...
if (edad > 18 && tieneLicencia) {
  console.log("Puede conducir!");
} else {
  console.log("No puede conducir!");
}
COPIA EL CÓDIGO
OR( | | )

El operador OR, representado por los símbolos "||", se utiliza para verificar si al menos una de las condiciones es verdadera. Si una de las condiciones es verdadera, el resultado será verdadero. Si ambas son falsas, el resultado será falso. Aquí tienes un ejemplo: let tieneManzana = false; let tieneBanana = true;

// si tiene manzana o tiene banama…
if (tieneManzana|| tieneBanana) {
  console.log("Tienes frutas!");
} else {
  console.log("No tienes frutas.");
}
COPIA EL CÓDIGO
Otros tipos de operadores lógicos

Operador	Nombre	Ejemplo	Resultado
==	Igual	A == B	Verdadero si A es igual a B
!=	Diferente	A != B	Verdadero si A no es igual a B
<	Menor que	A < B	Verdadero si A es menor que B
>	Mayor que	A > B	Verdadero si A es mayor que B
<=	Menor o igual	A <= B	Verdadero si A es menor o igual a B
>=	Mayor o igual	A >= B	Verdadero si A es mayor o igual a B
Operadores Lógicos

Operador	Nombre	Ejemplo	Resultado
&&	Y / AND	(A > B) && (B == C)	Verdadero si A es mayor que B y B es igual a C
||	O / OR	(A > B) || (B == C)	Verdadero si A es mayor que B o B es igual a C
!	NEGACIÓN	!(A == B)	Verdadero si A NO es igual a B
¿Te gustó este conocimiento y quieres más? Rafa Ballerini tiene un artículo increíble hablando sobre ‘Cómo usar operadores de comparación en Javascript’ que vale la pena leer

Desafíos finales:

Crea un programa que utilice console.log para mostrar un mensaje de bienvenida.

Crea una variable llamada "nombre" y asígnale tu nombre. Luego, utiliza console.log para mostrar el mensaje "¡Hola, [tu nombre]!" en la consola del navegador.

Crea una variable llamada "nombre" y asígnale tu nombre. Luego, utiliza alert para mostrar el mensaje "¡Hola, [tu nombre]!".

Utiliza prompt y haz la siguiente pregunta: ¿Cuál es el lenguaje de programación que más te gusta?. Luego, almacena la respuesta en una variable y muestra la respuesta en la consola del navegador.

Crea una variable llamada "valor1" y otra llamada "valor2", asignándoles valores numéricos de tu elección. Luego, realiza la suma de estos dos valores y almacena el resultado en una tercera variable llamada "resultado". Utiliza console.log para mostrar el mensaje "La suma de [valor1] y [valor2] es igual a [resultado]." en la consola.

Crea una variable llamada "valor1" y otra llamada "valor2", asignándoles valores numéricos de tu elección. Luego, realiza la resta de estos dos valores y almacena el resultado en una tercera variable llamada "resultado". Utiliza console.log para mostrar el mensaje "La diferencia entre [valor1] y [valor2] es igual a [resultado]." en la consola.

Pide al usuario que ingrese su edad con prompt. Con base en la edad ingresada, utiliza un if para verificar si la persona es mayor o menor de edad y muestra un mensaje apropiado en la consola.

Crea una variable "numero" y solicita un valor con prompt. Luego, verifica si es positivo, negativo o cero utilizando un if-else y muestra el mensaje correspondiente.

Utiliza un bucle while para mostrar los números del 1 al 10 en la consola.

Crea una variable "nota" y asígnale un valor numérico. Utiliza un if-else para determinar si la nota es mayor o igual a 7 y muestra "Aprobado" o "Reprobado" en la consola.

Utiliza Math.random para generar cualquier número aleatorio y muestra ese número en la consola.

Utiliza Math.random para generar un número entero entre 1 y 10 y muestra ese número en la consola.

Utiliza Math.random para generar un número entero entre 1 y 1000 y muestra ese número en la consola.

En esta lección, vimos cómo usar la documentación para generar un número aleatorio a través de la documentación de Mozilla. Sin embargo, también existe W3Schools (W3S), que es un recurso en línea ampliamente conocido y utilizado para aprender diversas tecnologías de desarrollo web, incluido JavaScript (JS).El sitio web ofrece tutoriales interactivos, ejemplos de código, referencias de sintaxis y conceptos fundamentales relacionados con JavaScript y otros lenguajes web.

Al explorar W3Schools, puedes adquirir una comprensión sólida de los principios de JS, desde lo básico hasta temas más avanzados, como la manipulación del DOM, interacciones con el usuario y solicitudes asíncronas. Es una herramienta valiosa para mejorar tus habilidades en JavaScript, ofreciendo un entorno práctico para experimentar con código, comprender conceptos clave y aplicar el conocimiento adquirido en tus propios proyectos de desarrollo web.

 DISCUTIR EN EL FORO
